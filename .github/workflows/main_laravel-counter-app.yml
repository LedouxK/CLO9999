# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - laravel-counter-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, zip
          coverage: none

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create .env file
        run: |
          cp .env.example .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "APP_ENV=production" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=laravelmysqlsrv.mysql.database.azure.com" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=laraveldb" >> .env
          echo "DB_USERNAME=mysqladmin" >> .env

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Configure MySQL Firewall
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZUREAPPSERVICE_CLIENTID_28F896382E504514B82582F12653786C }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZUREAPPSERVICE_CLIENTSECRET_5B8E0E3BFCF34D9E8F9D7A6B5C4D3E2A1 }}
          AZURE_TENANT_ID: ${{ secrets.AZUREAPPSERVICE_TENANTID_F1C5B57C05C944C0A3E581F1265E55B2 }}
        run: |
          # Récupérer l'IP publique de l'exécuteur GitHub Actions
          PUBLIC_IP=$(curl -s https://api.ipify.org)
          echo "IP publique de l'exécuteur: $PUBLIC_IP"
          
          # Connexion à Azure
          az login --service-principal \
            --username $AZURE_CLIENT_ID \
            --password $AZURE_CLIENT_SECRET \
            --tenant $AZURE_TENANT_ID
          
          # Ajouter une règle de pare-feu temporaire pour GitHub Actions
          az mysql flexible-server firewall-rule create \
            --resource-group laravel-rg \
            --name laravelmysqlsrv \
            --start-ip-address $PUBLIC_IP \
            --end-ip-address $PUBLIC_IP \
            --rule-name allow-github-actions

      - name: Run Migrations
        run: |
          php artisan migrate --force
          php artisan cache:table
          php artisan session:table

      - name: Remove MySQL Firewall Rule
        if: always()
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZUREAPPSERVICE_CLIENTID_28F896382E504514B82582F12653786C }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZUREAPPSERVICE_CLIENTSECRET_5B8E0E3BFCF34D9E8F9D7A6B5C4D3E2A1 }}
          AZURE_TENANT_ID: ${{ secrets.AZUREAPPSERVICE_TENANTID_F1C5B57C05C944C0A3E581F1265E55B2 }}
        run: |
          # Reconnexion à Azure (au cas où la session a expiré)
          az login --service-principal \
            --username $AZURE_CLIENT_ID \
            --password $AZURE_CLIENT_SECRET \
            --tenant $AZURE_TENANT_ID

          # Suppression de la règle de pare-feu
          az mysql flexible-server firewall-rule delete \
            --resource-group laravel-rg \
            --name laravelmysqlsrv \
            --rule-name allow-github-actions \
            --yes

      - name: Clear Config
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan view:clear
          php artisan route:clear
          php artisan event:clear

      - name: Optimize
        run: |
          php artisan optimize:clear
          php artisan optimize

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Zip artifact for deployment
        run: zip release.zip ./* .env.example .deployment -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: .
          